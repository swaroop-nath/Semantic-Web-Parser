<div class="mw-body" id="content" role="main">



<h1 class="firstHeading" id="firstHeading" lang="en">Machine learning</h1>
<div class="mw-body-content" id="bodyContent">



<a class="mw-jump-link" href="#mw-head">Jump to navigation</a>
<a class="mw-jump-link" href="#p-search">Jump to search</a>
<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><div class="mw-parser-output">



<p><b>Machine learning</b> (<b>ML</b>) is the <a href="/wiki/Branches_of_science" title="Branches of science">scientific study</a> of <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> and <a href="/wiki/Statistical_model" title="Statistical model">statistical models</a> that <a class="mw-redirect" href="/wiki/Computer_systems" title="Computer systems">computer systems</a> use to perform a specific task without using explicit instructions, relying on patterns and <a href="/wiki/Inference" title="Inference">inference</a> instead. It is seen as a subset of <a href="/wiki/Artificial_intelligence" title="Artificial intelligence">artificial intelligence</a>. Machine learning algorithms build a <a href="/wiki/Mathematical_model" title="Mathematical model">mathematical model</a> based on sample data, known as "<a class="mw-redirect" href="/wiki/Training_data" title="Training data">training data</a>", in order to make predictions or decisions without being explicitly programmed to perform the task.<sup class="reference" id="cite_ref-bishop2006_2-0"><a href="#cite_note-bishop2006-2">[2]</a></sup> Machine learning algorithms are used in a wide variety of applications, such as <a href="/wiki/Email_filtering" title="Email filtering">email filtering</a> and <a href="/wiki/Computer_vision" title="Computer vision">computer vision</a>, where it is difficult or infeasible to develop a conventional algorithm for effectively performing the task.
</p><p>Machine learning is closely related to <a href="/wiki/Computational_statistics" title="Computational statistics">computational statistics</a>, which focuses on making predictions using computers. The study of <a href="/wiki/Mathematical_optimization" title="Mathematical optimization">mathematical optimization</a> delivers methods, theory and application domains to the field of machine learning. <a href="/wiki/Data_mining" title="Data mining">Data mining</a> is a field of study within machine learning, and focuses on <a href="/wiki/Exploratory_data_analysis" title="Exploratory data analysis">exploratory data analysis</a> through <a href="/wiki/Unsupervised_learning" title="Unsupervised learning">unsupervised learning</a>.<sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup> In its application across business problems, machine learning is also referred to as <a href="/wiki/Predictive_analytics" title="Predictive analytics">predictive analytics</a>.
</p>

<h2><span class="mw-headline" id="Overview">Overview</span></h2>
<p>The name <i>machine learning</i> was coined in 1959 by <a href="/wiki/Arthur_Samuel" title="Arthur Samuel">Arthur Samuel</a>. <a href="/wiki/Tom_M._Mitchell" title="Tom M. Mitchell">Tom M. Mitchell</a> provided a widely quoted, more formal definition of the algorithms studied in the machine learning field: "A computer program is said to learn from experience <i>E</i> with respect to some class of tasks <i>T</i> and performance measure <i>P</i> if its performance at tasks in <i>T</i>, as measured by <i>P</i>,  improves with experience <i>E</i>." This definition of the tasks in which machine learning is concerned offers a fundamentally <a href="/wiki/Operational_definition" title="Operational definition">operational definition</a> rather than defining the field in cognitive terms. This follows <a href="/wiki/Alan_Turing" title="Alan Turing">Alan Turing</a>'s proposal in his paper "<a href="/wiki/Computing_Machinery_and_Intelligence" title="Computing Machinery and Intelligence">Computing Machinery and Intelligence</a>", in which the question "Can machines think?" is replaced with the question "Can machines do what we (as thinking entities) can do?". In Turing's proposal the various characteristics that could be possessed by a <i>thinking machine</i> and the various implications in constructing one are exposed.
</p>
<h3><span class="mw-headline" id="Machine_learning_tasks">Machine learning tasks</span></h3>


<p><a href="/wiki/Statistical_classification" title="Statistical classification">Classification</a> algorithms and <a href="/wiki/Regression_analysis" title="Regression analysis">regression</a> algorithms are types of supervised learning. Classification algorithms are used when the outputs are restricted to a <a class="mw-redirect" href="/wiki/Discrete_number" title="Discrete number">limited set</a> of values. For a classification algorithm that filters emails, the input would be an incoming email, and the output would be the name of the folder in which to file the email. For an algorithm that identifies spam emails, the output would be the prediction of either "<a href="/wiki/Email_spam" title="Email spam">spam</a>" or "not spam", represented by the <a href="/wiki/Boolean_data_type" title="Boolean data type">Boolean</a> values true and false. <a href="/wiki/Regression_analysis" title="Regression analysis">Regression</a> algorithms are named for their continuous outputs, meaning they may have any value within a range. Examples of a continuous value are the temperature, length, or price of an object.
</p><p>In <a href="/wiki/Unsupervised_learning" title="Unsupervised learning">unsupervised learning</a>, the algorithm builds a mathematical model from a set of data that contains only inputs and no desired output labels. Unsupervised learning algorithms are used to find structure in the data, like grouping or <a href="/wiki/Cluster_analysis" title="Cluster analysis">clustering</a> of data points. Unsupervised learning can discover patterns in the data, and can group the inputs into categories, as in <a href="/wiki/Feature_learning" title="Feature learning">feature learning</a>. <a href="/wiki/Dimensionality_reduction" title="Dimensionality reduction">Dimensionality reduction</a> is the process of reducing the number of "", or inputs, in a set of data.
</p><p><a href="/wiki/Active_learning_(machine_learning)" title="Active learning (machine learning)">Active learning</a> algorithms access the desired outputs (training labels) for a limited set of inputs based on a budget and optimize the choice of inputs for which it will acquire training labels. When used interactively, these can be presented to a human user for labeling. <a href="/wiki/Reinforcement_learning" title="Reinforcement learning">Reinforcement learning</a> algorithms are given feedback in the form of positive or negative reinforcement in a dynamic environment and are used in <a class="mw-redirect" href="/wiki/Autonomous_vehicle" title="Autonomous vehicle">autonomous vehicles</a> or in learning to play a game against a human opponent.<sup class="reference" style="white-space:nowrap;">:<span>3</span></sup> Other specialized algorithms in machine learning include <a class="mw-redirect" href="/wiki/Topic_modeling" title="Topic modeling">topic modeling</a>, where the computer program is given a set of <a href="/wiki/Natural_language" title="Natural language">natural language</a> documents and finds other documents that cover similar topics. Machine learning algorithms can be used to find the unobservable <a href="/wiki/Probability_density_function" title="Probability density function">probability density function</a> in  problems.  algorithms learn their own  based on previous experience. In ,  algorithms generate their own sequences of learning experiences, also known as a curriculum, to cumulatively acquire new skills through self-guided exploration and social interaction with humans. These robots use guidance mechanisms such as active learning, maturation, motor synergies, and imitation.
</p>
<h2><span class="mw-headline" id="History_and_relationships_to_other_fields">History and relationships to other fields</span></h2>

<p><a href="/wiki/Arthur_Samuel" title="Arthur Samuel">Arthur Samuel</a>, an American pioneer in the field of <a class="mw-redirect" href="/wiki/Computer_gaming" title="Computer gaming">computer gaming</a> and <a href="/wiki/Artificial_intelligence" title="Artificial intelligence">artificial intelligence</a>, coined the term "Machine Learning" in 1959 while at <a href="/wiki/IBM" title="IBM">IBM</a>. A representative book of the machine learning research during the 1960s was the Nilsson's book on Learning Machines, dealing mostly with machine learning for pattern classification. The interest of machine learning related to pattern recognition continued during the 1970s, as described in the book of Duda and Hart in 1973.  In 1981 a report was given on using teaching strategies so that a neural network learns to recognize 40 characters (26 letters, 10 digits, and 4 special symbols) from a computer terminal.  
As a scientific endeavor, machine learning grew out of the quest for artificial intelligence. Already in the early days of AI as an <a href="/wiki/Discipline_(academia)" title="Discipline (academia)">academic discipline</a>, some researchers were interested in having machines learn from data. They attempted to approach the problem with various symbolic methods, as well as what were then termed ""; these were mostly  and  that were later found to be reinventions of the  of statistics.  reasoning was also employed, especially in automated .<sup class="reference" style="white-space:nowrap;">:<span>488</span></sup>
</p><p>However, an increasing emphasis on the <a class="mw-redirect" href="/wiki/GOFAI" title="GOFAI">logical, knowledge-based approach</a> caused a rift between AI and machine learning. Probabilistic systems were plagued by theoretical and practical problems of data acquisition and representation.<sup class="reference" style="white-space:nowrap;">:<span>488</span></sup> By 1980, <a href="/wiki/Expert_system" title="Expert system">expert systems</a> had come to dominate AI, and statistics was out of favor. Work on symbolic/knowledge-based learning did continue within AI, leading to <a href="/wiki/Inductive_logic_programming" title="Inductive logic programming">inductive logic programming</a>, but the more statistical line of research was now outside the field of AI proper, in <a href="/wiki/Pattern_recognition" title="Pattern recognition">pattern recognition</a> and <a href="/wiki/Information_retrieval" title="Information retrieval">information retrieval</a>.<sup class="reference" style="white-space:nowrap;">:<span>708–710; 755</span></sup> Neural networks research had been abandoned by AI and <a href="/wiki/Computer_science" title="Computer science">computer science</a> around the same time. This line, too, was continued outside the AI/CS field, as "<a href="/wiki/Connectionism" title="Connectionism">connectionism</a>", by researchers from other disciplines including <a href="/wiki/John_Hopfield" title="John Hopfield">Hopfield</a>, <a href="/wiki/David_Rumelhart" title="David Rumelhart">Rumelhart</a> and <a class="mw-redirect" href="/wiki/Geoff_Hinton" title="Geoff Hinton">Hinton</a>. Their main success came in the mid-1980s with the reinvention of <a href="/wiki/Backpropagation" title="Backpropagation">backpropagation</a>.<sup class="reference" style="white-space:nowrap;">:<span>25</span></sup>
</p><p>Machine learning, reorganized as a separate field, started to flourish in the 1990s. The field changed its goal from achieving artificial intelligence to tackling solvable problems of a practical nature. It shifted focus away from the <a href="/wiki/Symbolic_artificial_intelligence" title="Symbolic artificial intelligence">symbolic approaches</a> it had inherited from AI, and toward methods and models borrowed from statistics and <a href="/wiki/Probability_theory" title="Probability theory">probability theory</a>. It also benefited from the increasing availability of digitized information, and the ability to distribute it via the <a href="/wiki/Internet" title="Internet">Internet</a>.
</p>
<h3><span class="mw-headline" id="Relation_to_data_mining">Relation to data mining</span></h3>
<p>Machine learning and <a href="/wiki/Data_mining" title="Data mining">data mining</a> often employ the same methods and overlap significantly, but while machine learning focuses on prediction, based on <i>known</i> properties learned from the training data, <a href="/wiki/Data_mining" title="Data mining">data mining</a> focuses on the <a href="/wiki/Discovery_(observation)" title="Discovery (observation)">discovery</a> of (previously) <i>unknown</i> properties in the data (this is the analysis step of <a class="mw-redirect" href="/wiki/Knowledge_discovery" title="Knowledge discovery">knowledge discovery</a> in databases). Data mining uses many machine learning methods, but with different goals; on the other hand, machine learning also employs data mining methods as "unsupervised learning" or as a preprocessing step to improve learner accuracy. Much of the confusion between these two research communities (which do often have separate conferences and separate journals, <a href="/wiki/ECML_PKDD" title="ECML PKDD">ECML PKDD</a> being a major exception) comes from the basic assumptions they work with: in machine learning, performance is usually evaluated with respect to the ability to  knowledge, while in knowledge discovery and data mining (KDD) the key task is the discovery of previously <i>unknown</i> knowledge. Evaluated with respect to known knowledge, an uninformed (unsupervised) method will easily be outperformed by other supervised methods, while in a typical KDD task, supervised methods cannot be used due to the unavailability of training data.
</p>
<h3><span class="mw-headline" id="Relation_to_optimization">Relation to optimization</span></h3>
<p>Machine learning also has intimate ties to <a href="/wiki/Mathematical_optimization" title="Mathematical optimization">optimization</a>: many learning problems are formulated as minimization of some <a href="/wiki/Loss_function" title="Loss function">loss function</a> on a training set of examples. Loss functions express the discrepancy between the predictions of the model being trained and the actual problem instances (for example, in classification, one wants to assign a label to instances, and models are trained to correctly predict the pre-assigned labels of a set of examples). The difference between the two fields arises from the goal of generalization: while optimization algorithms can minimize the loss on a training set, machine learning is concerned with minimizing the loss on unseen samples.
</p>
<h3><span class="mw-headline" id="Relation_to_statistics">Relation to statistics</span></h3>
<p>Machine learning and <a href="/wiki/Statistics" title="Statistics">statistics</a> are closely related fields in terms of methods, but distinct in their principal goal: statistics draws population <a href="/wiki/Statistical_inference" title="Statistical inference">inferences</a> from a <a href="/wiki/Sample_(statistics)" title="Sample (statistics)">sample</a>, while machine learning finds generalizable predictive patterns. According to <a href="/wiki/Michael_I._Jordan" title="Michael I. Jordan">Michael I. Jordan</a>, the ideas of machine learning, from methodological principles to theoretical tools, have had a long pre-history in statistics. He also suggested the term <a href="/wiki/Data_science" title="Data science">data science</a> as a placeholder to call the overall field.
</p><p><a href="/wiki/Leo_Breiman" title="Leo Breiman">Leo Breiman</a> distinguished two statistical modeling paradigms: data model and algorithmic model, wherein "algorithmic model" means more or less the machine learning algorithms like <a href="/wiki/Random_forest" title="Random forest">Random forest</a>.
</p><p>Some statisticians have adopted methods from machine learning, leading to a combined field that they call .
</p>
<h2><span class="mw-headline" id="Theory"> Theory</span></h2>

<p>A core objective of a learner is to generalize from its experience.<sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[20]</a></sup> Generalization in this context is the ability of a learning machine to perform accurately on new, unseen examples/tasks after having experienced a learning data set. The training examples come from some generally unknown probability distribution (considered representative of the space of occurrences) and the learner has to build a general model about this space that enables it to produce sufficiently accurate predictions in new cases.
</p><p>The computational analysis of machine learning algorithms and their performance is a branch of  known as . Because training sets are finite and the future is uncertain, learning theory usually does not yield guarantees of the performance of algorithms. Instead, probabilistic bounds on the performance are quite common. The  is one way to quantify generalization .
</p><p>For the best performance in the context of generalization, the complexity of the hypothesis should match the complexity of the function underlying the data. If the hypothesis is less complex than the function, then the model has under fitted the data. If the complexity of the model is increased in response, then the training error decreases. But if the hypothesis is too complex, then the model is subject to  and generalization will be poorer.
</p><p>In addition to performance bounds, learning theorists study the time complexity and feasibility of learning. In computational learning theory, a computation is considered feasible if it can be done in <a href="/wiki/Time_complexity#Polynomial_time" title="Time complexity">polynomial time</a>. There are two kinds of <a href="/wiki/Time_complexity" title="Time complexity">time complexity</a> results. Positive results show that a certain class of functions can be learned in polynomial time. Negative results show that certain classes cannot be learned in polynomial time.
</p>
<h2><span class="mw-headline" id="Approaches">Approaches</span></h2>
<h3><span class="mw-headline" id="Types_of_learning_algorithms">Types of learning algorithms</span></h3>
<p>The types of machine learning algorithms differ in their approach, the type of data they input and output, and the type of task or problem that they are intended to solve.
</p>
<h4><span class="mw-headline" id="Supervised_learning">Supervised learning</span></h4>

<p>Supervised learning algorithms build a mathematical model of a set of data that contains both the inputs and the desired outputs. The data is known as <a class="mw-redirect" href="/wiki/Training_data" title="Training data">training data</a>, and consists of a set of training examples. Each training example has one or more inputs and the desired output, also known as a supervisory signal.  In the mathematical model, each training example is represented by an <a href="/wiki/Array_data_structure" title="Array data structure">array</a> or vector, sometimes called a feature vector, and the training data is represented by a . Through iterative optimization of an , supervised learning algorithms learn a function that can be used to predict the output associated with new inputs. An optimal function will allow the algorithm to correctly determine the output for inputs that were not a part of the training data. An algorithm that improves the accuracy of its outputs or predictions over time is said to have learned to perform that task.
</p><p>Supervised learning algorithms include  and . Classification algorithms are used when the outputs are restricted to a limited set of values, and regression algorithms are used when the outputs may have any numerical value within a range.  is an area of supervised machine learning closely related to regression and classification, but the goal is to learn from examples using a similarity function that measures how similar or related two objects are. It has applications in , , visual identity tracking, face verification, and speaker verification.
</p><p>In the case of <a href="/wiki/Semi-supervised_learning" title="Semi-supervised learning">semi-supervised</a> learning algorithms, some of the training examples are missing training labels, but they can nevertheless be used to improve the quality of a model. In <a href="/wiki/Weak_supervision" title="Weak supervision">weakly supervised learning</a>, the training labels are noisy, limited, or imprecise; however, these labels are often cheaper to obtain, resulting in larger effective training sets.
</p>
<h4><span class="mw-headline" id="Unsupervised_learning">Unsupervised learning</span></h4>
<div class="hatnote navigation-not-searchable" role="note">See also: <a href="/wiki/Cluster_analysis" title="Cluster analysis">Cluster analysis</a></div>
<p>Unsupervised learning algorithms take a set of data that contains only inputs, and find structure in the data, like grouping or clustering of data points. The algorithms, therefore, learn from test data that has not been labeled, classified or categorized. Instead of responding to feedback, unsupervised learning algorithms identify commonalities in the data and react based on the presence or absence of such commonalities in each new piece of data. A central application of unsupervised learning is in the field of <a href="/wiki/Density_estimation" title="Density estimation">density estimation</a> in <a href="/wiki/Statistics" title="Statistics">statistics</a>, though unsupervised learning encompasses other domains involving summarizing and explaining data features.
</p><p>Cluster analysis is the assignment of a set of observations into subsets (called <i>clusters</i>) so that observations within the same cluster are similar according to one or more predesignated criteria, while observations drawn from different clusters are dissimilar. Different clustering techniques make different assumptions on the structure of the data, often defined by some  and evaluated, for example, by , or the similarity between members of the same cluster, and <i>separation</i>, the difference between clusters. Other methods are based on  and .
</p>
<h4><span class="mw-headline" id="Semi-supervised_learning">Semi-supervised learning</span></h4>

<p>Semi-supervised learning falls between <a href="/wiki/Unsupervised_learning" title="Unsupervised learning">unsupervised learning</a> (without any labeled training data) and <a href="/wiki/Supervised_learning" title="Supervised learning">supervised learning</a> (with completely labeled training data).  Many machine-learning researchers have found that unlabeled data, when used in conjunction with a small amount of labeled data, can produce a considerable improvement in learning accuracy.
</p>
<h4><span class="mw-headline" id="Reinforcement_learning">Reinforcement learning</span></h4>

<p>Reinforcement learning is an area of machine learning concerned with how  ought to take  in an environment so as to maximize some notion of cumulative reward. Due to its generality, the field is studied in many other disciplines, such as , , , , , , ,  and . In machine learning, the environment is typically represented as a  (MDP). Many reinforcement learning algorithms use  techniques. Reinforcement learning algorithms do not assume knowledge of an exact mathematical model of the MDP, and are used when exact models are infeasible. Reinforcement learning algorithms are used in autonomous vehicles or in learning to play a game against a human opponent.
</p>
<h4><span class="mw-headline" id="Self_learning">Self learning</span></h4>
<p>Self-learning as machine learning paradigm was introduced in 1982 along with a neural network capable of self-learning  named Crossbar Adaptive Array (CAA).  It is a learning with no external rewards and no external teacher advices. The CAA self-learning algorithm computes, in a crossbar fashion, both decisions about actions and emotions (feelings) about consequence situations. The system is driven by the interaction between cognition and emotion. 
The self-learning algorithm updates a memory matrix W =||w(a,s)|| such that in each iteration executes the following machine learning  routine: 
</p>
<pre> In situation s perform action a;
 Receive consequence situation s’;
 Compute emotion of being in consequence situation v(s’);
 Update crossbar memory  w’(a,s) = w(a,s) + v(s’).
</pre>
<p>It is a system with only one input, situation s, and only one output, action (or behavior) a. There is neither a separate reinforcement input nor an advice input from the environment. The backpropagated value (secondary reinforcement) is the emotion toward the consequence situation. The CAA exists in two environments, one is behavioral environment where it behaves, and the other is genetic environment, wherefrom it initially and only once receives initial emotions about situations to be encountered in the  behavioral environment. After receiving the genome (species) vector from the genetic environment, the CAA learns a goal seeking behavior, in an environment that contains both desirable and undesirable situations. 
</p>
<h4><span class="mw-headline" id="Feature_learning">Feature learning</span></h4>

<p>Several learning algorithms aim at discovering better representations of the inputs provided during training. Classic examples include  and cluster analysis. Feature learning algorithms, also called representation learning algorithms, often attempt to preserve the information in their input but also transform it in a way that makes it useful, often as a pre-processing step before performing classification or predictions. This technique allows reconstruction of the inputs coming from the unknown data-generating distribution, while not being necessarily faithful to configurations that are implausible under that distribution. This replaces manual , and allows a machine to both learn the features and use them to perform a specific task.
</p><p>Feature learning can be either supervised or unsupervised. In supervised feature learning, features are learned using labeled input data. Examples include , , and supervised . In unsupervised feature learning, features are learned with unlabeled input data.  Examples include dictionary learning, , , <sup class="reference" id="cite_ref-32"><a href="#cite_note-32">[32]</a></sup> and various forms of .<sup class="reference" id="cite_ref-34"><a href="#cite_note-34">[34]</a></sup>
</p><p><a class="mw-redirect" href="/wiki/Manifold_learning" title="Manifold learning">Manifold learning</a> algorithms attempt to do so under the constraint that the learned representation is low-dimensional. <a class="mw-redirect" href="/wiki/Sparse_coding" title="Sparse coding">Sparse coding</a> algorithms attempt to do so under the constraint that the learned representation is sparse, meaning that the mathematical model has many zeros.  algorithms aim to learn low-dimensional representations directly from  representations for multidimensional data, without reshaping them into higher-dimensional vectors.  algorithms discover multiple levels of representation, or a hierarchy of features, with higher-level, more abstract features defined in terms of (or generating) lower-level features. It has been argued that an intelligent machine is one that learns a representation that disentangles the underlying factors of variation that explain the observed data.
</p><p>Feature learning is motivated by the fact that machine learning tasks such as classification often require input that is mathematically and computationally convenient to process. However, real-world data such as images, video, and sensory data has not yielded to attempts to algorithmically define specific features. An alternative is to discover such features or representations through examination, without relying on explicit algorithms.
</p>
<h4><span class="mw-headline" id="Sparse_dictionary_learning">Sparse dictionary learning</span></h4>

<p>Sparse dictionary learning is a feature learning method where a training example is represented as a linear combination of <a href="/wiki/Basis_function" title="Basis function">basis functions</a>, and is assumed to be a <a href="/wiki/Sparse_matrix" title="Sparse matrix">sparse matrix</a>. The method is <a class="mw-redirect" href="/wiki/Strongly_NP-hard" title="Strongly NP-hard">strongly NP-hard</a> and difficult to solve approximately. A popular <a href="/wiki/Heuristic" title="Heuristic">heuristic</a> method for sparse dictionary learning is the <a href="/wiki/K-SVD" title="K-SVD">K-SVD</a> algorithm. Sparse dictionary learning has been applied in several contexts. In classification, the problem is to determine the class to which a previously unseen training example belongs. For a dictionary where each class has already been built, a new training example is associated with the class that is best sparsely represented by the corresponding dictionary. Sparse dictionary learning has also been applied in . The key idea is that a clean image patch can be sparsely represented by an image dictionary, but the noise cannot.
</p>
<h4><span class="mw-headline" id="Anomaly_detection">Anomaly detection</span></h4>

<p>In , anomaly detection, also known as outlier detection, is the identification of rare items, events or observations which raise suspicions by differing significantly from the majority of the data. Typically, the anomalous items represent an issue such as , a structural defect, medical problems or errors in a text. Anomalies are referred to as , novelties, noise, deviations and exceptions.
</p><p>In particular, in the context of abuse and network intrusion detection, the interesting objects are often not rare objects, but unexpected bursts in activity. This pattern does not adhere to the common statistical definition of an outlier as a rare object, and many outlier detection methods (in particular, unsupervised algorithms) will fail on such data, unless it has been aggregated appropriately. Instead, a cluster analysis algorithm may be able to detect the micro-clusters formed by these patterns.
</p><p>Three broad categories of anomaly detection techniques exist. Unsupervised anomaly detection techniques detect anomalies in an unlabeled test data set under the assumption that the majority of the instances in the data set are normal, by looking for instances that seem to fit least to the remainder of the data set. Supervised anomaly detection techniques require a data set that has been labeled as "normal" and "abnormal" and involves training a classifier (the key difference to many other statistical classification problems is the inherently unbalanced nature of outlier detection). Semi-supervised anomaly detection techniques construct a model representing normal behavior from a given normal training data set and then test the likelihood of a test instance to be generated by the model.
</p>
<h4><span class="mw-headline" id="Association_rules">Association rules</span></h4>
<div class="hatnote navigation-not-searchable" role="note">See also: <a href="/wiki/Inductive_logic_programming" title="Inductive logic programming">Inductive logic programming</a></div>
<p>Association rule learning is a  method for discovering relationships between variables in large databases. It is intended to identify strong rules discovered in databases using some measure of "interestingness".
</p><p>Rule-based machine learning is a general term for any machine learning method that identifies, learns, or evolves "rules" to store, manipulate or apply knowledge. The defining characteristic of a rule-based machine learning algorithm is the identification and utilization of a set of relational rules that collectively represent the knowledge captured by the system. This is in contrast to other machine learning algorithms that commonly identify a singular model that can be universally applied to any instance in order to make a prediction. Rule-based machine learning approaches include , association rule learning, and .
</p><p>Based on the concept of strong rules, <a href="/wiki/Rakesh_Agrawal_(computer_scientist)" title="Rakesh Agrawal (computer scientist)">Rakesh Agrawal</a>,  and Arun Swami introduced association rules for discovering regularities between products in large-scale transaction data recorded by  (POS) systems in supermarkets. For example, the rule  found in the sales data of a supermarket would indicate that if a customer buys onions and potatoes together, they are likely to also buy hamburger meat. Such information can be used as the basis for decisions about marketing activities such as promotional  or . In addition to , association rules are employed today in application areas including , , , and . In contrast with , association rule learning typically does not consider the order of items either within a transaction or across transactions.
</p><p>Learning classifier systems (LCS) are a family of rule-based machine learning algorithms that combine a discovery component, typically a <a href="/wiki/Genetic_algorithm" title="Genetic algorithm">genetic algorithm</a>, with a learning component, performing either <a href="/wiki/Supervised_learning" title="Supervised learning">supervised learning</a>, , or . They seek to identify a set of context-dependent rules that collectively store and apply knowledge in a  manner in order to make predictions.
</p><p>Inductive logic programming (ILP) is an approach to rule-learning using <a href="/wiki/Logic_programming" title="Logic programming">logic programming</a> as a uniform representation for input examples, background knowledge, and hypotheses. Given an encoding of the known background knowledge and a set of examples represented as a logical database of facts, an ILP system will derive a hypothesized logic program that <a class="mw-redirect" href="/wiki/Entailment" title="Entailment">entails</a> all positive and no negative examples. <a href="/wiki/Inductive_programming" title="Inductive programming">Inductive programming</a> is a related field that considers any kind of programming languages for representing hypotheses (and not only logic programming), such as <a href="/wiki/Functional_programming" title="Functional programming">functional programs</a>.
</p><p>Inductive logic programming is particularly useful in <a href="/wiki/Bioinformatics" title="Bioinformatics">bioinformatics</a> and <a href="/wiki/Natural_language_processing" title="Natural language processing">natural language processing</a>. <a href="/wiki/Gordon_Plotkin" title="Gordon Plotkin">Gordon Plotkin</a> and <a href="/wiki/Ehud_Shapiro" title="Ehud Shapiro">Ehud Shapiro</a> laid the initial theoretical foundation for inductive machine learning in a logical setting.<sup class="reference" id="cite_ref-49"><a href="#cite_note-49">[49]</a></sup> Shapiro built their first implementation (Model Inference System) in 1981: a Prolog program that inductively inferred logic programs from positive and negative examples. The term <i>inductive</i> here refers to <a href="/wiki/Inductive_reasoning" title="Inductive reasoning">philosophical</a> induction, suggesting a theory to explain observed facts, rather than  induction, proving a property for all members of a well-ordered set.
</p>
<h3><span class="mw-headline" id="Models">Models</span></h3>
<p>Performing machine learning involves creating a <a href="/wiki/Statistical_model" title="Statistical model">model</a>, which is trained on some training data and then can process additional data to make predictions. Various types of models have been used and researched for machine learning systems.
</p>
<h4><span class="mw-headline" id="Artificial_neural_networks">Artificial neural networks</span></h4>
<div class="hatnote navigation-not-searchable" role="note">See also: <a href="/wiki/Deep_learning" title="Deep learning">Deep learning</a></div>

<p>Artificial neural networks (ANNs), or <a href="/wiki/Connectionism" title="Connectionism">connectionist</a> systems, are computing systems vaguely inspired by the <a class="mw-redirect" href="/wiki/Biological_neural_network" title="Biological neural network">biological neural networks</a> that constitute animal <a href="/wiki/Brain" title="Brain">brains</a>. Such systems "learn" to perform tasks by considering examples, generally without being programmed with any task-specific rules.
</p><p>An ANN is a model based on a collection of connected units or nodes called "<a href="/wiki/Artificial_neuron" title="Artificial neuron">artificial neurons</a>", which loosely model the  in a biological . Each connection, like the  in a biological , can transmit information, a "signal", from one artificial neuron to another. An artificial neuron that receives a signal can process it and then signal additional artificial neurons connected to it. In common ANN implementations, the signal at a connection between artificial neurons is a , and the output of each artificial neuron is computed by some non-linear function of the sum of its inputs. The connections between artificial neurons are called "edges". Artificial neurons and edges typically have a  that adjusts as learning proceeds. The weight increases or decreases the strength of the signal at a connection. Artificial neurons may have a threshold such that the signal is only sent if the aggregate signal crosses that threshold. Typically, artificial neurons are aggregated into layers. Different layers may perform different kinds of transformations on their inputs. Signals travel from the first layer (the input layer) to the last layer (the output layer), possibly after traversing the layers multiple times.
</p><p>The original goal of the ANN approach was to solve problems in the same way that a <a href="/wiki/Human_brain" title="Human brain">human brain</a> would. However, over time, attention moved to performing specific tasks, leading to deviations from <a href="/wiki/Biology" title="Biology">biology</a>. Artificial neural networks have been used on a variety of tasks, including <a href="/wiki/Computer_vision" title="Computer vision">computer vision</a>, , ,  filtering,  and .
</p><p><a href="/wiki/Deep_learning" title="Deep learning">Deep learning</a> consists of multiple hidden layers in an artificial neural network. This approach tries to model the way the human brain processes light and sound into vision and hearing. Some successful applications of deep learning are <a href="/wiki/Computer_vision" title="Computer vision">computer vision</a> and <a href="/wiki/Speech_recognition" title="Speech recognition">speech recognition</a>.
</p>
<h4><span class="mw-headline" id="Decision_trees">Decision trees</span></h4>

<p>Decision tree learning uses a <a href="/wiki/Decision_tree" title="Decision tree">decision tree</a> as a <a href="/wiki/Predictive_modelling" title="Predictive modelling">predictive model</a> to go from observations about an item (represented in the branches) to conclusions about the item's target value (represented in the leaves). It is one of the predictive modeling approaches used in statistics, data mining and machine learning. Tree models where the target variable can take a discrete set of values are called classification trees; in these tree structures, <a class="mw-redirect" href="/wiki/Leaf_node" title="Leaf node">leaves</a> represent class labels and branches represent <a href="/wiki/Logical_conjunction" title="Logical conjunction">conjunctions</a> of features that lead to those class labels. Decision trees where the target variable can take continuous values (typically <a class="mw-redirect" href="/wiki/Real_numbers" title="Real numbers">real numbers</a>) are called regression trees. In decision analysis, a decision tree can be used to visually and explicitly represent decisions and <a class="mw-redirect" href="/wiki/Decision_making" title="Decision making">decision making</a>. In data mining, a decision tree describes data, but the resulting classification tree can be an input for decision making.
</p>
<h4><span class="mw-headline" id="Support_vector_machines">Support vector machines</span></h4>

<p>Support vector machines (SVMs), also known as support vector networks, are a set of related <a href="/wiki/Supervised_learning" title="Supervised learning">supervised learning</a> methods used for classification and regression. Given a set of training examples, each marked as belonging to one of two categories, an SVM training algorithm builds a model that predicts whether a new example falls into one category or the other.  An SVM training algorithm is a non-<a href="/wiki/Probabilistic_classification" title="Probabilistic classification">probabilistic</a>, <a class="mw-redirect" href="/wiki/Binary_classifier" title="Binary classifier">binary</a>, , although methods such as  exist to use SVM in a probabilistic classification setting. In addition to performing linear classification, SVMs can efficiently perform a non-linear classification using what is called the , implicitly mapping their inputs into high-dimensional feature spaces.
</p>

<h4><span class="mw-headline" id="Regression_analysis">Regression analysis</span></h4>

<p>Regression analysis encompasses a large variety of statistical methods to estimate the relationship between input variables and their associated features. Its most common form is <a href="/wiki/Linear_regression" title="Linear regression">linear regression</a>, where a single line is drawn to best fit the given data according to a mathematical criterion such as <a href="/wiki/Ordinary_least_squares" title="Ordinary least squares">ordinary least squares</a>. The latter is oftentimes extended by <a href="/wiki/Regularization_(mathematics)" title="Regularization (mathematics)">regularization (mathematics)</a> methods to mitigate overfitting and high bias, as can be seen in <a class="mw-redirect" href="/wiki/Ridge_regression" title="Ridge regression">ridge regression</a>. When dealing with non-linear problems, go-to models include <a href="/wiki/Polynomial_regression" title="Polynomial regression">polynomial regression</a> (e.g. used for trendline fitting in Microsoft Excel ), <a href="/wiki/Logistic_regression" title="Logistic regression">Logistic regression</a> (often used in ) or even , which introduces non-linearity by taking advantage of the  to implicitly map input variables to higher dimensional space. 
</p>
<h4><span class="mw-headline" id="Bayesian_networks">Bayesian networks</span></h4>


<p>A Bayesian network, belief network or directed acyclic graphical model is a probabilistic <a href="/wiki/Graphical_model" title="Graphical model">graphical model</a> that represents a set of <a class="mw-redirect" href="/wiki/Random_variables" title="Random variables">random variables</a> and their <a href="/wiki/Conditional_independence" title="Conditional independence">conditional independence</a> with a <a href="/wiki/Directed_acyclic_graph" title="Directed acyclic graph">directed acyclic graph</a> (DAG). For example, a Bayesian network could represent the probabilistic relationships between diseases and symptoms. Given symptoms, the network can be used to compute the probabilities of the presence of various diseases. Efficient algorithms exist that perform <a href="/wiki/Inference" title="Inference">inference</a> and learning. Bayesian networks that model sequences of variables, like <a href="/wiki/Speech_recognition" title="Speech recognition">speech signals</a> or , are called . Generalizations of Bayesian networks that can represent and solve decision problems under uncertainty are called .
</p>
<h4><span class="mw-headline" id="Genetic_algorithms">Genetic algorithms</span></h4>

<p>A genetic algorithm (GA) is a <a href="/wiki/Search_algorithm" title="Search algorithm">search algorithm</a> and <a href="/wiki/Heuristic_(computer_science)" title="Heuristic (computer science)">heuristic</a> technique that mimics the process of <a href="/wiki/Natural_selection" title="Natural selection">natural selection</a>, using methods such as <a href="/wiki/Mutation_(genetic_algorithm)" title="Mutation (genetic algorithm)">mutation</a> and <a href="/wiki/Crossover_(genetic_algorithm)" title="Crossover (genetic algorithm)">crossover</a> to generate new <a href="/wiki/Chromosome_(genetic_algorithm)" title="Chromosome (genetic algorithm)">genotypes</a> in the hope of finding good solutions to a given problem. In machine learning, genetic algorithms were used in the 1980s and 1990s.<sup class="reference" id="cite_ref-56"><a href="#cite_note-56">[56]</a></sup> Conversely, machine learning techniques have been used to improve the performance of genetic and <a href="/wiki/Evolutionary_algorithm" title="Evolutionary algorithm">evolutionary algorithms</a>.
</p>
<h3><span class="mw-headline" id="Training_models">Training models</span></h3>
<p>Usually, machine learning models require a lot of data in order for them to perform well. Usually, when training a machine learning model, one needs to collect a large, representative sample of data from a training set. Data from the training set can be as varied as a corpus of text, a collection of images, and data collected from individual users of a service. <a href="/wiki/Overfitting" title="Overfitting">Overfitting</a> is something to watch out for when training a machine learning model.
</p>
<h4><span class="mw-headline" id="Federated_learning">Federated learning</span></h4>

<p>Federated learning is a new approach to training machine learning models that decentralizes the training process, allowing for users' privacy to be maintained by not needing to send their data to a centralized server. This also increases efficiency by decentralizing the training process to many devices. For example, <a href="/wiki/Gboard" title="Gboard">Gboard</a> uses federated machine learning to train search query prediction models on users' mobile phones without having to send individual searches back to <a href="/wiki/Google" title="Google">Google</a>.
</p>
<h2><span class="mw-headline" id="Applications">Applications</span></h2>
<p>There are many applications for machine learning, including:
</p>
<div class="div-col columns column-width" style="-moz-column-width: 15em; -webkit-column-width: 15em; column-width: 15em;">
<ul><li><a href="/wiki/Precision_agriculture" title="Precision agriculture">Agriculture</a></li>
<li><a href="/wiki/Computational_anatomy" title="Computational anatomy">Anatomy</a></li>
<li><a href="/wiki/Adaptive_website" title="Adaptive website">Adaptive websites</a></li>
<li><a href="/wiki/Affective_computing" title="Affective computing">Affective computing</a></li>
<li><a class="mw-redirect" href="/wiki/Banking" title="Banking">Banking</a></li>
<li><a href="/wiki/Bioinformatics" title="Bioinformatics">Bioinformatics</a></li>
<li><a class="mw-redirect" href="/wiki/Brain%E2%80%93machine_interface" title="Brain–machine interface">Brain–machine interfaces</a></li>
<li><a href="/wiki/Cheminformatics" title="Cheminformatics">Cheminformatics</a></li>
<li><a href="/wiki/Citizen_science" title="Citizen science">Citizen science</a></li>
<li><a href="/wiki/Network_simulation" title="Network simulation">Computer networks</a></li>
<li><a href="/wiki/Computer_vision" title="Computer vision">Computer vision</a></li>
<li><a class="mw-redirect" href="/wiki/Credit-card_fraud" title="Credit-card fraud">Credit-card fraud</a> detection</li>
<li><a href="/wiki/Data_quality" title="Data quality">Data quality</a></li>
<li><a class="mw-redirect" href="/wiki/DNA_sequence" title="DNA sequence">DNA sequence</a> classification</li>
<li><a href="/wiki/Computational_economics" title="Computational economics">Economics</a></li>




























</ul>
</div>
<p>In 2006, the media-services provider <a href="/wiki/Netflix" title="Netflix">Netflix</a> held the first "<a href="/wiki/Netflix_Prize" title="Netflix Prize">Netflix Prize</a>" competition to find a program to better predict user preferences and improve the accuracy on its existing Cinematch movie recommendation algorithm by at least 10%.  A joint team made up of researchers from -Research in collaboration with the teams Big Chaos and Pragmatic Theory built an  to win the Grand Prize in 2009 for $1 million. Shortly after the prize was awarded, Netflix realized that viewers' ratings were not the best indicators of their viewing patterns ("everything is a recommendation") and they changed their recommendation engine accordingly. In 2010 The Wall Street Journal wrote about the firm Rebellion Research and their use of machine learning to predict the financial crisis. In 2012, co-founder of , , predicted that 80% of medical doctors' jobs would be lost in the next two decades to automated machine learning medical diagnostic software. In 2014, it was reported that a machine learning algorithm had been applied in the field of art history to study fine art paintings, and that it may have revealed previously unrecognized influences among artists. In 2019  published the first research book created using machine learning.
</p>
<h2><span class="mw-headline" id="Limitations">Limitations</span></h2>
<p>Although machine learning has been transformative in some fields, machine-learning programs often fail to deliver expected results.<sup class="reference" id="cite_ref-67"><a href="#cite_note-67">[67]</a></sup> Reasons for this are numerous: lack of (suitable) data, lack of access to the data, data bias, privacy problems, badly chosen tasks and algorithms, wrong tools and people, lack of resources, and evaluation problems.
</p><p>In 2018, a self-driving car from <a href="/wiki/Uber" title="Uber">Uber</a> failed to detect a pedestrian, who was killed after a collision. Attempts to use machine learning in healthcare with the <a href="/wiki/Watson_(computer)" title="Watson (computer)">IBM Watson</a> system failed to deliver even after years of time and billions of investment.<sup class="reference" id="cite_ref-72"><a href="#cite_note-72">[72]</a></sup>
</p>
<h3><span class="mw-headline" id="Bias">Bias</span></h3>

<p>Machine learning approaches in particular can suffer from different data biases. A machine learning system trained on current customers only may not be able to predict the needs of new customer groups that are not represented in the training data. When trained on man-made data, machine learning is likely to pick up the same constitutional and unconscious biases already present in society. Language models learned from data have been shown to contain human-like biases.<sup class="reference" id="cite_ref-75"><a href="#cite_note-75">[75]</a></sup> Machine learning systems used for criminal risk assessment have been found to be biased against black people.<sup class="reference" id="cite_ref-77"><a href="#cite_note-77">[77]</a></sup> In 2015, Google photos would often tag black people as gorillas, and in 2018 this still was not well resolved, but Google reportedly was still using the workaround to remove all gorillas from the training data, and thus was not able to recognize real gorillas at all. Similar issues with recognizing non-white people have been found in many other systems. In 2016, Microsoft tested a  that learned from Twitter, and it quickly picked up racist and sexist language. Because of such challenges, the effective use of machine learning may take longer to be adopted in other domains. Concern for  in machine learning, that is, reducing bias in machine learning and propelling its use for human good is increasingly expressed by artificial intelligence scientists, including , who reminds engineers that "There’s nothing artificial about AI...It’s inspired by people, it’s created by people, and—most importantly—it impacts people. It is a powerful tool we are only just beginning to understand, and that is a profound responsibility.”
</p>
<h2><span class="mw-headline" id="Model_assessments">Model assessments</span></h2>
<p>Classification machine learning models can be validated by accuracy estimation techniques like the <a class="mw-redirect" href="/wiki/Test_set" title="Test set">Holdout</a> method, which splits the data in a training and test set (conventionally 2/3 training set and 1/3 test set designation) and evaluates the performance of the training model on the test set. In comparison, the K-fold-<a href="/wiki/Cross-validation_(statistics)" title="Cross-validation (statistics)">cross-validation</a> method randomly partitions the data into K subsets and then K experiments are performed each respectively considering 1 subset for evaluation and the remaining K-1 subsets for training the model. In addition to the holdout and cross-validation methods, , which samples n instances with replacement from the dataset, can be used to assess model accuracy.
</p><p>In addition to overall accuracy, investigators frequently report <a href="/wiki/Sensitivity_and_specificity" title="Sensitivity and specificity">sensitivity and specificity</a> meaning True Positive Rate (TPR) and True Negative Rate (TNR) respectively. Similarly, investigators sometimes report the <a class="mw-redirect" href="/wiki/False_Positive_Rate" title="False Positive Rate">False Positive Rate</a> (FPR) as well as the <a class="mw-redirect" href="/wiki/False_Negative_Rate" title="False Negative Rate">False Negative Rate</a> (FNR). However, these rates are ratios that fail to reveal their numerators and denominators. The  (TOC) is an effective method to express a model's diagnostic ability. TOC shows the numerators and denominators of the previously mentioned rates, thus TOC provides more information than the commonly used  (ROC) and ROC's associated Area Under the Curve (AUC).
</p>
<h2><span class="mw-headline" id="Ethics">Ethics</span></h2>
<p>Machine learning poses a host of <a href="/wiki/Machine_ethics" title="Machine ethics">ethical questions</a>. Systems which are trained on datasets collected with biases may exhibit these biases upon use (<a href="/wiki/Algorithmic_bias" title="Algorithmic bias">algorithmic bias</a>), thus digitizing cultural prejudices. For example, using job hiring data from a firm with racist hiring policies may lead to a machine learning system duplicating the bias by scoring job applicants against similarity to previous successful applicants.<sup class="reference" id="cite_ref-Jeffries_Outline_88-0"><a href="#cite_note-Jeffries_Outline-88">[88]</a></sup> Responsible <a href="/wiki/Data_collection" title="Data collection">collection of data</a> and documentation of algorithmic rules used by a system thus is a critical part of machine learning.
</p><p>Because human languages contain biases, machines trained on language <i></i> will necessarily also learn these biases.<sup class="reference" id="cite_ref-90"><a href="#cite_note-90">[90]</a></sup>
</p><p>Other forms of ethical challenges, not related to personal biases, are more seen in health care. There are concerns among health care professionals that these systems might not be designed in the public's interest but as income-generating machines. This is especially true in the United States where there is a long-standing ethical dilemma of improving health care, but also increasing profits. For example, the algorithms could be designed to provide patients with unnecessary tests or medication in which the algorithm's proprietary owners hold stakes. There is huge potential for machine learning in health care to provide professionals a great tool to diagnose, medicate, and even plan recovery paths for patients, but this will not happen until the personal biases mentioned previously, and these "greed" biases are addressed.
</p>
<h2><span class="mw-headline" id="Software">Software</span></h2>
<p> containing a variety of machine learning algorithms include the following:
</p>
<h3><span class="mw-headline" id="Free_and_open-source_software">Free and open-source software</span></h3>
<div class="div-col columns column-width" style="-moz-column-width: 18em; -webkit-column-width: 18em; column-width: 18em;">
<ul>























</ul>
</div>
<h3><span class="mw-headline" id="Proprietary_software_with_free_and_open-source_editions">Proprietary software with free and open-source editions</span></h3>

<h3><span class="mw-headline" id="Proprietary_software">Proprietary software</span></h3>

<h2><span class="mw-headline" id="Journals">Journals</span></h2>

<h2><span class="mw-headline" id="Conferences">Conferences</span></h2>

<h2><span class="mw-headline" id="See_also">See also</span></h2>

<h2><span class="mw-headline" id="References">References</span></h2>

<h2><span class="mw-headline" id="Further_reading">Further reading</span></h2>
<style data-mw-deduplicate="TemplateStyles:r886047268">.mw-parser-output .refbegin{font-size:90%;margin-bottom:0.5em}.mw-parser-output .refbegin-hanging-indents>ul{list-style-type:none;margin-left:0}.mw-parser-output .refbegin-hanging-indents>ul>li,.mw-parser-output .refbegin-hanging-indents>dl>dd{margin-left:0;padding-left:3.2em;text-indent:-3.2em;list-style:none}.mw-parser-output .refbegin-100{font-size:100%}</style>
<h2><span class="mw-headline" id="External_links">External links</span></h2>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="background-color:#f9f9f9;border:1px solid #aaa;color:#000">
<tbody><tr>

<td class="mbox-text plainlist">Wikimedia Commons has media related to <i><b><a class="extiw" href="https://commons.wikimedia.org/wiki/Category:Machine_learning" title="commons:Category:Machine learning"><span style="">Machine learning</span></a></b></i>.</td></tr>
</tbody></table>


<!-- 
NewPP limit report
Parsed by mw1367
Cached time: 20200402162953
Cache expiry: 2592000
Dynamic content: false
Complications: [vary‐revision‐sha1]
CPU time usage: 1.224 seconds
Real time usage: 1.774 seconds
Preprocessor visited node count: 7877/1000000
Post‐expand include size: 224020/2097152 bytes
Template argument size: 11997/2097152 bytes
Highest expansion depth: 16/40
Expensive parser function count: 8/500
Unstrip recursion depth: 1/20
Unstrip post‐expand size: 268374/5000000 bytes
Number of Wikibase entities loaded: 7/400
Lua time usage: 0.654/10.000 seconds
Lua memory usage: 8.53 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00% 1510.402      1 -total
 43.43%  655.999      1 Template:Reflist
 21.48%  324.427      4 Template:Cite_conference
 20.78%  313.901      2 Template:Refn
 14.37%  217.119     21 Template:Cite_journal
  9.13%  137.868     10 Template:ISBN
  6.28%   94.883      1 Template:Commons_category
  5.30%   80.013     13 Template:Cite_book
  5.20%   78.494      1 Template:Commons
  5.02%   75.795      1 Template:Sister_project
-->
<!-- Saved in parser cache with key enwiki:pcache:idhash:233488-0!canonical!math=5 and timestamp 20200402162952 and revision id 948603409
 -->
</div></div>



</div>
</div>